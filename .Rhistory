gg <-
p %>%
plotly::layout(xaxis = list(title = 'Excess'), yaxis = list(title = 'Density'))
gg
styler:::style_active_file()
runApp('inst/app')
gg <-
df %>%
ggplot(aes(x = Excess, y = reorder(Line, -Excess), fill = reorder(Line, -Excess))) +
geom_boxplot()
gg
gg <-
df %>%
ggplot(aes(y = Excess, y = reorder(Line, -Excess), fill = reorder(Line, -Excess))) +
geom_boxplot() +
theme_minimal() +
scale_fill_got_d(option = "Margaery", guide = FALSE) +
ylab("") +
xlab("Excess Journey Time")
gg <-
df %>%
ggplot(aes(y = Excess, yx = reorder(Line, -Excess), fill = reorder(Line, -Excess))) +
geom_boxplot() +
theme_minimal() +
scale_fill_got_d(option = "Margaery", guide = FALSE) +
ylab("") +
xlab("Excess Journey Time")
gg
gg <-
df %>%
ggplot(aes(y = Excess, yx = reorder(Line, -Excess), fill = reorder(Line, -Excess))) +
geom_boxplot() +
theme_minimal() +
scale_fill_got_d(option = "Margaery", guide = FALSE) +
ylab("") +
xlab("Excess Journey Time") +
coord_flip()
gg <-
df %>%
ggplot(aes(y = Excess, yx = reorder(Line, -Excess), fill = reorder(Line, -Excess))) +
geom_boxplot() +
theme_minimal() +
scale_fill_got_d(option = "Margaery", name = 'Line') +
ylab("") +
xlab("Excess Journey Time") +
coord_flip()
gg
gg <-
df %>%
ggplot(aes(y = Excess, yx = reorder(Line, -Excess), fill = reorder(Line, -Excess))) +
geom_boxplot() +
theme_minimal() +
scale_fill_got_d(option = "Margaery", name = 'Line') +
ylab("") +
xlab("Excess Journey Time")
gg
gg <-
df %>%
ggplot(aes(y = Excess, x = reorder(Line, -Excess), fill = reorder(Line, -Excess))) +
geom_boxplot() +
theme_minimal() +
scale_fill_got_d(option = "Margaery", name = 'Line') +
ylab("") +
xlab("Excess Journey Time")
gg
gg <-
df %>%
ggplot(aes(y = Excess, x = reorder(Line, -Excess), fill = reorder(Line, -Excess))) +
geom_boxplot() +
theme_minimal() +
scale_fill_got_d(option = "Margaery", name = 'Line') +
ylab("") +
xlab("Excess Journey Time") +
coord_flip()
gg
gg <-
df %>%
ggplot(aes(y = Excess, x = reorder(Line, -Excess), fill = reorder(Line, -Excess))) +
geom_boxplot() +
theme_minimal() +
scale_fill_got_d(option = "Margaery", guide = FALSE) +
ylab("") +
xlab("Excess Journey Time") +
coord_flip()
gg %>% ggplotly()
d <- df[Line == y_tags[[i]]][["Excess"]]
d
d <- df[Line == y_tags[[i]]][["Excess"]]
d
p <- plotly::plot_ly(type = 'box', colors = colours)
for (i in seq_along(y_tags)) {
d <- df[Line == y_tags[[i]]][["Excess"]]
p <-
plotly::add_trace(
p,
y = d,
name = y_tags[[i]]
)
}
gg <-
p %>%
plotly::layout(xaxis = list(title = 'Excess'), yaxis = list(title = 'Density'))
gg
p
gg <-
p %>%
plotly::layout(yaxis = list(title = 'Excess'))
gg
runApp('inst/app')
roxygen2::roxygenise()
devtools::install()
runApp('inst/app')
runApp('inst/app')
runApp('inst/app')
runApp('inst/app')
df
df %>%
ggplot(aes(x = Month, y = Excess, colour = Line)) +
geom_line()
y_tags <- df$Line %>% unique()
colours <- gameofthrones::gameofthrones(option = "Margaery", n = length(y_tags))
p <- plotly::plot_ly(type = 'scatter', colors = colours)
for (i in seq_along(y_tags)) {
d <- df[Line == y_tags[[i]]][["Excess"]]
p <-
plotly::add_trace(
p,
y = d,
name = y_tags[[i]],
mode = 'lines'
)
}
gg <-
p %>%
plotly::layout(yaxis = list(title = xlabel))
if (relative) {
df <- df %>% mutate(Excess = Excess / TOTAL)
xlabel <- "Relative Excess Journey Time"
} else {
xlabel <- "Excess Journey Time"
}
relative = NA
if (relative) {
df <- df %>% mutate(Excess = Excess / TOTAL)
xlabel <- "Relative Excess Journey Time"
} else {
xlabel <- "Excess Journey Time"
}
y_tags <- df$Line %>% unique()
colours <- gameofthrones::gameofthrones(option = "Margaery", n = length(y_tags))
p <- plotly::plot_ly(type = 'scatter', colors = colours)
for (i in seq_along(y_tags)) {
d <- df[Line == y_tags[[i]]][["Excess"]]
p <-
plotly::add_trace(
p,
y = d,
name = y_tags[[i]],
mode = 'lines'
)
}
gg <-
p %>%
plotly::layout(yaxis = list(title = xlabel))
relative
relative = FALSE
source('~/.active-rstudio-document', echo=TRUE)
gg
runApp('inst/app')
roxygen2::roxygenise()
devtools::install()
runApp('inst/app')
runApp('inst/app')
roxygen2::roxygenise()
devtools::install()
runApp('inst/app')
runApp('inst/app')
roxygen2::roxygenise()
devtools::install()
runApp('inst/app')
runApp('inst/app')
runApp('inst/app')
runApp('inst/app')
runApp('inst/app')
df
df$Type %>% unique()
df$Type %>% table()
p <- plot_ly(type = 'violin')
i = 0
for (i in 1:length(unique(df$Line))) {
p <- add_trace(
p,
x = df$Line[df$Type == 'SS' & df$Line == unique(df$Line)[i]],
y = df$total_bill[df$Type == 'SS' & df$Line == unique(df$Line)[i]],
hoveron = "points+kde",
legendgroup = 'M',
scalegroup = 'M',
name = 'M',
side = 'negative',
box = list(
visible = T
),
points = 'all',
jitter = 0,
scalemode = 'count',
meanline = list(
visible = T
),
line = list(
color = "#8dd3c7"
),
marker = list(
line = list(
width = 2,
color = "#8dd3c7"
),
symbol = 'line-ns'
),
showlegend = showLegend[i]
) %>%
add_trace(
x = df$Line[df$Type == 'DT' & df$Line == unique(df$Line)[i]],
y = df$total_bill[df$Type == 'DT' & df$Line == unique(df$Line)[i]],
hoveron = "points+kde",
legendgroup = 'F',
scalegroup = 'F',
name = 'F',
side = 'positive',
box = list(
visible = T
),
points = 'all',
jitter = 0,
scalemode = 'count',
meanline = list(
visible = T
),
line = list(
color = "#bebada"
),
marker = list(
line = list(
width = 2,
color = "#bebada"
),
symbol = 'line-ns'
),
showlegend = showLegend[i]
)
}
p <- plot_ly(type = 'violin')
i = 0
for (i in 1:length(unique(df$Line))) {
p <- add_trace(
p,
x = df$Line[df$Type == 'SS' & df$Line == unique(df$Line)[i]],
y = df$total_bill[df$Type == 'SS' & df$Line == unique(df$Line)[i]],
hoveron = "points+kde",
legendgroup = 'M',
scalegroup = 'M',
name = 'M',
side = 'negative',
box = list(
visible = T
),
points = 'all',
jitter = 0,
scalemode = 'count',
meanline = list(
visible = T
),
line = list(
color = "#8dd3c7"
),
marker = list(
line = list(
width = 2,
color = "#8dd3c7"
),
symbol = 'line-ns'
)
) %>%
add_trace(
x = df$Line[df$Type == 'DT' & df$Line == unique(df$Line)[i]],
y = df$total_bill[df$Type == 'DT' & df$Line == unique(df$Line)[i]],
hoveron = "points+kde",
legendgroup = 'F',
scalegroup = 'F',
name = 'F',
side = 'positive',
box = list(
visible = T
),
points = 'all',
jitter = 0,
scalemode = 'count',
meanline = list(
visible = T
),
line = list(
color = "#bebada"
),
marker = list(
line = list(
width = 2,
color = "#bebada"
),
symbol = 'line-ns'
)
)
}
p <- layout(
p,
title = "Total bill distribution<br><i>scaled by number of bills per gender",
yaxis = list(
zeroline = F
),
violingap = 0,
violingroupgap = 0,
violinmode = 'overlay',
legend = list(
tracegroupgap = 0
)
)
p
p <- plot_ly(type = 'violin')
i = 0
p <- df %>%
plot_ly(type = 'violin') %>%
add_trace(
x = ~day[df$Type == 'DT'],
y = ~total_bill[df$Type == 'DT'],
legendgroup = 'DT',
scalegroup = 'DT',
name = 'DT',
side = 'negative',
box = list(
visible = T
),
meanline = list(
visible = T
),
line = list(
color = 'blue'
)
) %>%
add_trace(
x = ~day[df$Type == 'SS'],
y = ~total_bill[df$Type == 'SS'],
legendgroup = 'SS',
scalegroup = 'SS',
name = 'SS',
side = 'positive',
box = list(
visible = T
),
meanline = list(
visible = T
),
line = list(
color = 'green'
)
) %>%
layout(
xaxis = list(
title = ""
),
yaxis = list(
title = "",
zeroline = F
),
violingap = 0,
violingroupgap = 0,
violinmode = 'overlay'
)
p
df[df$Type == 'DT']
p <- df %>%
plot_ly(type = 'violin') %>%
add_trace(
x = ~df[df$Type == 'DT']$Line,
y = ~df[df$Type == 'DT']$Excess,
legendgroup = 'DT',
scalegroup = 'DT',
name = 'DT',
side = 'negative',
box = list(
visible = T
),
meanline = list(
visible = T
),
line = list(
color = 'blue'
)
) %>%
add_trace(
x = ~df[df$Type == 'SS']$Line,
y = ~df[df$Type == 'SS']$Excess,
legendgroup = 'SS',
scalegroup = 'SS',
name = 'SS',
side = 'positive',
box = list(
visible = T
),
meanline = list(
visible = T
),
line = list(
color = 'green'
)
) %>%
layout(
xaxis = list(
title = ""
),
yaxis = list(
title = "",
zeroline = F
),
violingap = 0,
violingroupgap = 0,
violinmode = 'overlay'
)
p
p <- df %>%
plot_ly(type = 'violin') %>%
add_trace(
x = ~df[df$Type == 'DT']$Line,
y = ~df[df$Type == 'DT']$Excess,
legendgroup = 'DT',
scalegroup = 'DT',
name = 'DT',
side = 'negative',
box = list(
visible = T
),
meanline = list(
visible = T
),
line = list(
color = 'blue'
)
) %>%
add_trace(
x = ~df[df$Type == 'SS']$Line,
y = ~df[df$Type == 'SS']$Excess,
legendgroup = 'SS',
scalegroup = 'SS',
name = 'SS',
side = 'positive',
box = list(
visible = T
),
meanline = list(
visible = T
),
line = list(
color = 'green'
)
)
p
source('~/.active-rstudio-document', echo=TRUE)
p <- df %>%
plot_ly(type = 'violin') %>%
add_trace(
x = ~df[df$Type == 'DT']$Line,
y = ~df[df$Type == 'DT']$Excess,
legendgroup = 'DT',
scalegroup = 'DT',
name = 'DT',
side = 'negative',
box = list(
visible = T
),
meanline = list(
visible = T
)
) %>%
add_trace(
x = ~df[df$Type == 'SS']$Line,
y = ~df[df$Type == 'SS']$Excess,
legendgroup = 'SS',
scalegroup = 'SS',
name = 'SS',
side = 'positive',
box = list(
visible = T
),
meanline = list(
visible = T
)
) %>%
layout(
xaxis = list(
title = ""
),
yaxis = list(
title = "",
zeroline = F
)
)
p
runApp('inst/app')
devtools::install()
runApp('inst/app')
runApp('inst/app')
devtools::install()
runApp('inst/app')
df
runApp('inst/app')
